test_height= input("Height of the wall: ")
test_width= input ("Width of the wall: ")
coverage = 5
paint_calc(height=test_height, width=test_width, coverage= cover)


import math


def paint_calc(height, width, cover):
    area=(height*width)
    num_of_cans= math.ceil(area/cover)
    print(f"You'll need {num_of_cans} cans of paint.")



#Prime Number Checker#

def prime_checker(number):
    is_prime = True
    for i in range(2, number):
        if number % i == 0:
            is_prime = False
    if is_prime:
        print("It's a prime number.")
    else:
        print("It's not a prime number.")

n = int(input("Check this number: "))
prime_checker(number=n)

#Caesar's Cipher

alphabet['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
direction= input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")

text = input("Type your message:\n").lower()
shift= int(input("Type the shift number:\n"))

cipher_text=""

def encrypt(plaint_text, shift_amount):
    for letter in plain_text:
        position= alphabet.index(letter)
        new_position= position + shift amount
        new_letter= alphabet[new_letter]
        cipher_text+=new_letter
    print(f"The encoded text is {cipher_text}

encrypt(plain_text= text, shift_amount= shift)

decrypted_text=""
def decrypt(cipher_text, shift_val)
    for letter in cipher_text
        dposition= alphabet.index(letter)
        old_position= dposition - shift_val
        old_letter= alphabet[old_position}
        decrypted_text += old_letter
    paint(f"The decoded text is {decrypted_text}")

decrypt(cipher_text= text, shift_val= shift)


